{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const container = document.querySelector('.container');\r\nconst seats = document.querySelectorAll('.row .seat:not(.occupied)');\r\nconst count = document.getElementById('count');\r\nconst total = document.getElementById('total');\r\nconst movieSelect = document.getElementById('movie');\r\nconst currency = document.getElementById('currency-one');\r\n\r\n\r\nlet ticketPrice = getTicketPrice(movieSelect);\r\n\r\npopulateUI();\r\n\r\n\r\n\r\n\r\nfunction setMovieData(movieIndex, moviePrice) {\r\n    localStorage.setItem('selectedMovieIndex', movieIndex);\r\n    localStorage.setItem('selectedMoviePrice', moviePrice);\r\n\r\n}\r\n\r\nfunction getTicketPrice(movieList) {\r\n    const reg = new RegExp(/\\(\\d+\\.?\\d*/);\r\n    const selectedMovie = movieList.options[movieList.selectedIndex].textContent;\r\n    const price = +reg.exec(selectedMovie)[0].slice(1);\r\n    return price;\r\n}\r\n\r\nfunction updateSelectedCount() {\r\n    const selectedSeats = document.querySelectorAll('.row .seat.selected');\r\n\r\n    const seatsIndex = [...selectedSeats].map(seat => [...seats].indexOf(seat));\r\n\r\n    localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));\r\n\r\n\r\n    const selectedSeatsCount = selectedSeats.length;\r\n    count.innerText = selectedSeatsCount;\r\n    total.innerText = selectedSeatsCount * ticketPrice;\r\n}\r\n\r\nfunction updateList() {\r\n    const myPromise = new Promise(res => {\r\n        setTimeout(() => {\r\n            res(movieSelect);\r\n        }, 500)\r\n    })\r\n    return myPromise;\r\n}\r\n\r\ncontainer.addEventListener('click', e => {\r\n    if (\r\n        e.target.classList.contains('seat') &&\r\n        !e.target.classList.contains('occupied')\r\n    ) {\r\n        e.target.classList.toggle('selected');\r\n\r\n        updateSelectedCount();\r\n    }\r\n});\r\n\r\nfunction populateUI() {\r\n    const selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));\r\n\r\n    if (selectedSeats !== null && selectedSeats.length > 0) {\r\n        seats.forEach((seat, index) => {\r\n            if (selectedSeats.indexOf(index) > -1) {\r\n                seat.classList.add('selected');\r\n            }\r\n        })\r\n    }\r\n\r\n    const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');\r\n    if (selectedMovieIndex !== null) {\r\n        movieSelect.selectedIndex = selectedMovieIndex;\r\n    }\r\n\r\n    const selectedCurrencyIndex = localStorage.getItem('selectedCurrencyIndex');\r\n    const selectedCurrency = localStorage.getItem('selectedCurrency');\r\n    if (selectedCurrencyIndex !== null) {\r\n        currency.selectedIndex = selectedCurrencyIndex;\r\n        updateMoviesPrice(selectedCurrency)\r\n        ticketPrice = getTicketPrice(movieSelect);\r\n        updateSelectedCount()\r\n        updateList().then(generatedList => {\r\n            ticketPrice = getTicketPrice(generatedList);\r\n            updateSelectedCount()\r\n        });\r\n\r\n    }\r\n}\r\n\r\nmovieSelect.addEventListener('change', e => {\r\n\r\n    ticketPrice = getTicketPrice(e.target);\r\n\r\n    setMovieData(e.target.selectedIndex, e.target.value);\r\n    updateSelectedCount();\r\n})\r\n\r\ncurrency.addEventListener('change', e => {\r\n    const targetCurrency = e.target.value;\r\n    localStorage.setItem('selectedCurrency', e.target.value);\r\n    localStorage.setItem('selectedCurrencyIndex', e.target.selectedIndex);\r\n    updateMoviesPrice(targetCurrency);\r\n    updateList().then(generatedList => {\r\n        ticketPrice = getTicketPrice(generatedList);\r\n        updateSelectedCount()\r\n    });\r\n});\r\n\r\n\r\nfunction updateMoviesPrice(newCurr) {\r\n    Array.from(movieSelect.options).forEach(op => {\r\n        fetch(`https://v6.exchangerate-api.com/v6/d7e5572616b37260972fdaca/pair/USD/${newCurr}/${op.value}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw new Error(\"Error, Server response\", { cause: response })\r\n                } else {\r\n                    return res.json()\r\n                }\r\n            })\r\n            .then(data => {\r\n                op.innerText = op.textContent.replace(/\\d+\\.?\\d* [A-Z]{3}/, data.conversion_result + \" \" + data.target_code);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Network connection error:\" + err.message);\r\n            })\r\n    })\r\n}\r\n\r\nupdateSelectedCount();\r\n\r\n"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}